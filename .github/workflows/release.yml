name: Release

on:
    push:
        tags: "*"

env:
    IMAGE_PATH: beebucket/mds_mapper
    WHEEL_NAME: mds_mapper.whl
    LICENSES_ARTIFACT_NAME: licenses.csv
    CONFIG_README_ARTIFACT_NAME: config_readme.md
    PIP_EXTRA_INDEX_URL: https://download.pytorch.org/whl/cpu

jobs:
    build_wheel:
        runs-on: ubuntu-24.04
        name: Build Release Wheel
        env:
            DISTRIBUTION_DIR: "${{ github.workspace }}/dist"
            VERSION: "${{ github.ref_name }}"
        steps:
        -   uses: actions/checkout@v4
            with:
                lfs: true
        -   uses: actions/setup-python@v5
            with:
                python-version-file: '.python-version'
                cache: 'pip'
        -   name: Build Wheel
            run: /bin/bash ${{ github.workspace}}/scripts/build_wheel.sh
        -   uses: actions/upload-artifact@v4
            with:
                name: ${{ env.WHEEL_NAME }}
                path: "${{ env.DISTRIBUTION_DIR }}/mds_mapper*.whl"
                if-no-files-found: error

    license_report:
        runs-on: ubuntu-24.04
        name: Create License Report
        needs:
        -   build_wheel
        steps:
        -   uses: actions/checkout@v4
        -   uses: actions/setup-python@v5
            with:
                python-version-file: '.python-version'
                cache: 'pip'
        -   uses: actions/download-artifact@v4
            id: download_wheel
            with:
                name: ${{ env.WHEEL_NAME }}
                path: ${{ github.workspace }}
        -   name: Install
            run: |
                git config --global url."https://${{ secrets.GIT_HUB_API_KEY }}@github.com/".insteadOf "git@github.com:"
                git config --global url."https://${{ secrets.GIT_HUB_API_KEY }}@github.com".insteadOf "https://github.com"
                pip install ${{ steps.download_wheel.outputs.download-path }}[test]
        -   name: Run pip-licenses
            run: pip-licenses --format=csv --with-url --with-authors --order=license --output-file ${{ env.LICENSES_ARTIFACT_NAME }}
        -   name: Upload License Report
            uses: actions/upload-artifact@v4
            with:
                name: ${{ env.LICENSES_ARTIFACT_NAME }}
                path: ${{ env.LICENSES_ARTIFACT_NAME }}
    
    configuration-readme:
        runs-on: ubuntu-24.04
        name: Create Configuration Readme
        needs:
        -   build_wheel
        steps:
        -   uses: actions/checkout@v4
        -   uses: actions/setup-python@v5
            with:
                python-version-file: '.python-version'
                cache: 'pip'
        -   uses: actions/download-artifact@v4
            id: download_wheel
            with:
                name: ${{ env.WHEEL_NAME }}
                path: ${{ github.workspace }}
        -   name: Install
            run: |
                git config --global url."https://${{ secrets.GIT_HUB_API_KEY }}@github.com/".insteadOf "git@github.com:"
                git config --global url."https://${{ secrets.GIT_HUB_API_KEY }}@github.com".insteadOf "https://github.com"
                pip install ${{ steps.download_wheel.outputs.download-path }}[test]
        -   name: Run pydantic markdown generator
            run: pydantic_markdown --model mds_mapper.Config --output ${{ env.CONFIG_README_ARTIFACT_NAME }}
        -   name: Upload readme
            uses: actions/upload-artifact@v4
            with:
                name: ${{ env.CONFIG_README_ARTIFACT_NAME }}
                path: ${{ env.CONFIG_README_ARTIFACT_NAME }}
            
    build_and_release_docker:
        runs-on: ubuntu-24.04
        name: Build and Push MDS Mapper docker image
        needs:
        -   build_wheel
        timeout-minutes: 1440
        env:
            REGISTRY: docker.io
        outputs:
            dockerhub_reference: "${{ steps.meta.outputs.tags }}"
        steps:
        -   uses: docker/login-action@v3
            with:
                registry: ${{ env.REGISTRY }}
                username: ${{ secrets.DOCKER_HUB_USER_NAME }}
                password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        -   uses: actions/checkout@v4
        -   uses: actions/download-artifact@v4
            id: download_wheel
            with:
                name: ${{ env.WHEEL_NAME }}
                path: ${{ github.workspace }}/dist
        -   uses: docker/setup-qemu-action@v3
        -   uses: docker/setup-buildx-action@v3
        -   name: Extract Docker metadata
            id: meta
            uses: docker/metadata-action@v5.5.1
            with:
                images: ${{ env.REGISTRY }}/${{ env.IMAGE_PATH }}
                flavor: latest=false
                tags: |
                    type=ref,event=branch
                    type=ref,event=tag
                    type=ref,event=pr
                    type=semver,pattern={{version}}
        -   name: Build and push Docker image
            id: build-and-push
            uses: docker/build-push-action@v6
            with:
                context: .
                file: docker/Dockerfile
                platforms: |
                    linux/amd64
                build-args: |
                    VERSION=${{ github.ref_name }}
                secrets: |
                    REPO_TOKEN=${{ secrets.GIT_HUB_API_KEY }}    
                push: True
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}
                cache-from: type=gha
                cache-to: type=gha,mode=max

    create_release:
        runs-on: ubuntu-24.04
        name: Create Release
        needs:
        -   build_wheel
        -   build_and_release_docker
        -   license_report
        -   configuration-readme
        env:
            ARTIFACTS_DIR: ${{ github.workspace }}/release_artifacts
        steps:
        -   name: Create Directory for artifacts
            run: mkdir -p ${{ env.ARTIFACTS_DIR }}
        -   uses: actions/download-artifact@v4
            with:
                name: ${{ env.WHEEL_NAME }}
                path: ${{ env.ARTIFACTS_DIR }}
        -   uses: actions/download-artifact@v4
            with:
                name: ${{ env.LICENSES_ARTIFACT_NAME }}
                path: ${{ env.ARTIFACTS_DIR }}
        -   uses: actions/download-artifact@v4
            with:
                name: ${{ env.CONFIG_README_ARTIFACT_NAME }}
                path: ${{ env.ARTIFACTS_DIR }}        
        -   name: Release
            uses: softprops/action-gh-release@v2
            with:
                body:
                    "Dockerhub Reference (private): ${{ needs.build_and_release_docker.outputs.dockerhub_reference }}\n"
                files: ${{ env.ARTIFACTS_DIR }}/*
                fail_on_unmatched_files: true
                draft: true
                generate_release_notes: true
